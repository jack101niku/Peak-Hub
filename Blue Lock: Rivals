--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v87 = v2(v0(v30, 16));
			if v19 then
				local v117 = 0;
				local v118;
				while true do
					if (v117 == 1) then
						return v118;
					end
					if (v117 == 0) then
						v118 = v5(v87, v19);
						v19 = nil;
						v117 = 1;
					end
				end
			else
				return v87;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v88 = (v31 / ((5 - 3) ^ (v32 - ((1 + 1) - 1)))) % ((3 - 1) ^ (((v33 - (2 - (878 - (282 + 595)))) - (v32 - (620 - (555 + 64)))) + (932 - (857 + 74))));
			return v88 - (v88 % 1);
		else
			local v89 = 2 ^ (v32 - (569 - (367 + 201)));
			return (((v31 % (v89 + v89)) >= v89) and (928 - (214 + 713))) or (0 + 0);
		end
	end
	local function v21()
		local v34 = 1637 - (1523 + 114);
		local v35;
		while true do
			if (v34 == ((1270 - (226 + 1044)) + 0)) then
				v35 = v1(v16, v18, v18);
				v18 = v18 + (1 - 0);
				v34 = 1066 - (68 + 997);
			end
			if (v34 == 1) then
				return v35;
			end
		end
	end
	local function v22()
		local v36 = 0 - 0;
		local v37;
		local v38;
		while true do
			if ((118 - (32 + 85)) == v36) then
				return (v38 * (251 + 5)) + v37;
			end
			if (v36 == 0) then
				v37, v38 = v1(v16, v18, v18 + 1 + (1 - 0));
				v18 = v18 + ((1759 - 800) - (892 + 65));
				v36 = (352 - (87 + 263)) - 1;
			end
		end
	end
	local function v23()
		local v39, v40, v41, v42 = v1(v16, v18, v18 + (183 - (67 + 113)));
		v18 = v18 + 4;
		return (v42 * 16777216) + (v41 * (48056 + 17480)) + (v40 * (628 - 372)) + v39;
	end
	local function v24()
		local v43 = v23();
		local v44 = v23();
		local v45 = 1 + 0;
		local v46 = (v20(v44, 3 - 2, 972 - (802 + 150)) * (2 ^ (85 - (71 - (10 + 8))))) + v43;
		local v47 = v20(v44, 37 - 16, 23 + 8);
		local v48 = ((v20(v44, 1029 - (915 + (524 - (416 + 26)))) == 1) and -(2 - (3 - 2))) or (1 + 0);
		if (v47 == (0 - 0)) then
			if (v46 == (1187 - (1069 + 118))) then
				return v48 * (0 - 0);
			else
				v47 = 3 - 2;
				v45 = (0 + 0) - 0;
			end
		elseif (v47 == (356 + 1691)) then
			return ((v46 == 0) and (v48 * (1 / (0 - 0)))) or (v48 * NaN);
		end
		return v8(v48, v47 - (1015 + 8)) * (v45 + (v46 / ((793 - (368 + 423)) ^ (163 - 111))));
	end
	local function v25(v49)
		local v50;
		if not v49 then
			local v90 = 0 - 0;
			while true do
				if (v90 == (438 - (145 + 293))) then
					v49 = v23();
					if (v49 == (430 - (44 + 386))) then
						return "";
					end
					break;
				end
			end
		end
		v50 = v3(v16, v18, (v18 + v49) - (1487 - (998 + 400 + 88)));
		v18 = v18 + v49;
		local v51 = {};
		for v68 = 1 + 0, #v50 do
			v51[v68] = v2(v1(v3(v50, v68, v68)));
		end
		return v6(v51);
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v52 = (function()
			return function(v91, v92, v93, v94, v95, v96, v97, v98)
				local v91 = (function()
					return 0;
				end)();
				local v92 = (function()
					return;
				end)();
				local v94 = (function()
					return;
				end)();
				while true do
					if (v91 ~= (0 - 0)) then
					else
						local v123 = (function()
							return 0;
						end)();
						while true do
							if (v123 ~= 1) then
							else
								v91 = (function()
									return #"!";
								end)();
								break;
							end
							if (0 == v123) then
								v92 = (function()
									return v93();
								end)();
								v94 = (function()
									return nil;
								end)();
								v123 = (function()
									return 1 + 0;
								end)();
							end
						end
					end
					if (v91 == #" ") then
						if (v92 == #"!") then
							v94 = (function()
								return v93() ~= 0;
							end)();
						elseif (v92 == 2) then
							v94 = (function()
								return v95();
							end)();
						elseif (v92 == #"asd") then
							v94 = (function()
								return v96();
							end)();
						end
						v97[v98] = (function()
							return v94;
						end)();
						break;
					end
				end
				return v91, v92, v93, v94, v95, v96, v97, v98;
			end;
		end)();
		local v53 = (function()
			return function(v99, v100, v101, v102, v103, v104, v105, v106, v107)
				local v108 = (function()
					return 0;
				end)();
				local v99 = (function()
					return;
				end)();
				local v100 = (function()
					return;
				end)();
				while true do
					if (v108 == 0) then
						local v125 = (function()
							return 0 + 0;
						end)();
						local v126 = (function()
							return;
						end)();
						while true do
							if (v125 == 0) then
								v126 = (function()
									return 202 - (14 + 188);
								end)();
								while true do
									if (0 ~= v126) then
									else
										v99 = (function()
											return 0;
										end)();
										v100 = (function()
											return nil;
										end)();
										v126 = (function()
											return 676 - (534 + 141);
										end)();
									end
									if (v126 == (1 + 0)) then
										v108 = (function()
											return 1 + 0;
										end)();
										break;
									end
								end
								break;
							end
						end
					end
					if (v108 == 1) then
						while true do
							if (v99 == (0 + 0)) then
								v100 = (function()
									return v101();
								end)();
								if (v102(v100, #">", #":") == 0) then
									local v129 = (function()
										return 0 - 0;
									end)();
									local v130 = (function()
										return;
									end)();
									local v131 = (function()
										return;
									end)();
									local v132 = (function()
										return;
									end)();
									local v133 = (function()
										return;
									end)();
									while true do
										if (v129 == 2) then
											while true do
												if (v130 ~= #"[") then
												else
													local v175 = (function()
														return 0 - 0;
													end)();
													local v176 = (function()
														return;
													end)();
													while true do
														if (v175 ~= 0) then
														else
															v176 = (function()
																return 0 - 0;
															end)();
															while true do
																if (1 == v176) then
																	v130 = (function()
																		return 2 + 0;
																	end)();
																	break;
																end
																if (v176 ~= 0) then
																else
																	v133 = (function()
																		return {v103(),v103(),nil,nil};
																	end)();
																	if (v131 == (396 - (115 + 281))) then
																		local v465 = (function()
																			return 0;
																		end)();
																		local v466 = (function()
																			return;
																		end)();
																		while true do
																			if (v465 == 0) then
																				v466 = (function()
																					return 0 - 0;
																				end)();
																				while true do
																					if (v466 ~= (0 + 0)) then
																					else
																						v133[#"91("] = (function()
																							return v103();
																						end)();
																						v133[#"?id="] = (function()
																							return v103();
																						end)();
																						break;
																					end
																				end
																				break;
																			end
																		end
																	elseif (v131 == #"[") then
																		v133[#"xnx"] = (function()
																			return v104();
																		end)();
																	elseif (v131 == (4 - 2)) then
																		v133[#"asd"] = (function()
																			return v104() - ((7 - 5) ^ (883 - (550 + 317)));
																		end)();
																	elseif (v131 == #"-19") then
																		local v488 = (function()
																			return 0 - 0;
																		end)();
																		while true do
																			if (v488 == (0 - 0)) then
																				v133[#"19("] = (function()
																					return v104() - (2 ^ (44 - 28));
																				end)();
																				v133[#"asd1"] = (function()
																					return v103();
																				end)();
																				break;
																			end
																		end
																	end
																	v176 = (function()
																		return 286 - (134 + 151);
																	end)();
																end
															end
															break;
														end
													end
												end
												if (v130 == #"asd") then
													if (v102(v132, #"19(", #"asd") ~= #",") then
													else
														v133[#"0313"] = (function()
															return v105[v133[#"asd1"]];
														end)();
													end
													v106[v107] = (function()
														return v133;
													end)();
													break;
												end
												if (v130 == 2) then
													local v178 = (function()
														return 1665 - (970 + 695);
													end)();
													local v179 = (function()
														return;
													end)();
													while true do
														if (v178 ~= (0 - 0)) then
														else
															v179 = (function()
																return 1990 - (582 + 1408);
															end)();
															while true do
																if (v179 ~= (3 - 2)) then
																else
																	v130 = (function()
																		return #"91(";
																	end)();
																	break;
																end
																if (0 ~= v179) then
																else
																	if (v102(v132, #"!", #"[") == #"\\") then
																		v133[2 - 0] = (function()
																			return v105[v133[7 - 5]];
																		end)();
																	end
																	if (v102(v132, 1826 - (1195 + 629), 2 - 0) == #",") then
																		v133[#"-19"] = (function()
																			return v105[v133[#"xnx"]];
																		end)();
																	end
																	v179 = (function()
																		return 1;
																	end)();
																end
															end
															break;
														end
													end
												end
												if (v130 == 0) then
													local v180 = (function()
														return 0;
													end)();
													local v181 = (function()
														return;
													end)();
													while true do
														if (v180 ~= 0) then
														else
															v181 = (function()
																return 241 - (187 + 54);
															end)();
															while true do
																if (v181 ~= (780 - (162 + 618))) then
																else
																	v131 = (function()
																		return v102(v100, 2 + 0, #"asd");
																	end)();
																	v132 = (function()
																		return v102(v100, #"?id=", 4 + 2);
																	end)();
																	v181 = (function()
																		return 1 - 0;
																	end)();
																end
																if ((1 - 0) ~= v181) then
																else
																	v130 = (function()
																		return #"~";
																	end)();
																	break;
																end
															end
															break;
														end
													end
												end
											end
											break;
										end
										if ((0 + 0) ~= v129) then
										else
											local v134 = (function()
												return 0;
											end)();
											while true do
												if (v134 == (1637 - (1373 + 263))) then
													v129 = (function()
														return 1001 - (451 + 549);
													end)();
													break;
												end
												if (v134 == (0 + 0)) then
													v130 = (function()
														return 0;
													end)();
													v131 = (function()
														return nil;
													end)();
													v134 = (function()
														return 1 - 0;
													end)();
												end
											end
										end
										if (v129 == (1 - 0)) then
											v132 = (function()
												return nil;
											end)();
											v133 = (function()
												return nil;
											end)();
											v129 = (function()
												return 2;
											end)();
										end
									end
								end
								break;
							end
						end
						return v99, v100, v101, v102, v103, v104, v105, v106, v107;
					end
				end
			end;
		end)();
		local v54 = (function()
			return function(v109, v110, v111)
				local v112 = (function()
					return 1384 - (746 + 638);
				end)();
				local v113 = (function()
					return;
				end)();
				while true do
					if (v112 ~= 0) then
					else
						v113 = (function()
							return 0;
						end)();
						while true do
							if (v113 == (0 + 0)) then
								local v127 = (function()
									return 0;
								end)();
								local v128 = (function()
									return;
								end)();
								while true do
									if (v127 ~= 0) then
									else
										v128 = (function()
											return 0 - 0;
										end)();
										while true do
											if (v128 == 0) then
												v109[v110 - #"}"] = (function()
													return v111();
												end)();
												return v109, v110, v111;
											end
										end
										break;
									end
								end
							end
						end
						break;
					end
				end
			end;
		end)();
		local v55 = (function()
			return {};
		end)();
		local v56 = (function()
			return {};
		end)();
		local v57 = (function()
			return {};
		end)();
		local v58 = (function()
			return {v55,v56,nil,v57};
		end)();
		local v59 = (function()
			return v23();
		end)();
		local v60 = (function()
			return {};
		end)();
		for v70 = #"!", v59 do
			FlatIdent_25011, Type, v21, Cons, v24, v25, v60, v70 = (function()
				return v52(FlatIdent_25011, Type, v21, Cons, v24, v25, v60, v70);
			end)();
		end
		v58[#"xnx"] = (function()
			return v21();
		end)();
		for v71 = #"|", v23() do
			FlatIdent_1076E, Descriptor, v21, v20, v22, v23, v60, v55, v71 = (function()
				return v53(FlatIdent_1076E, Descriptor, v21, v20, v22, v23, v60, v55, v71);
			end)();
		end
		for v72 = #"~", v23() do
			v56, v72, v28 = (function()
				return v54(v56, v72, v28);
			end)();
		end
		return v58;
	end
	local function v29(v62, v63, v64)
		local v65 = v62[(785 + 797) - (1535 + 46)];
		local v66 = v62[2 + 0];
		local v67 = v62[1 + 2];
		return function(...)
			local v73 = v65;
			local v74 = v66;
			local v75 = v67;
			local v76 = v27;
			local v77 = 561 - (306 + 254);
			local v78 = -(1 + 0);
			local v79 = {};
			local v80 = {...};
			local v81 = v12("#", ...) - (1468 - (899 + 568));
			local v82 = {};
			local v83 = {};
			for v114 = 0 + 0, v81 do
				if ((23 < 3610) and (v114 >= v75)) then
					v79[v114 - v75] = v80[v114 + (2 - 1)];
				else
					v83[v114] = v80[v114 + (604 - (268 + 335))];
				end
			end
			local v84 = (v81 - v75) + (1881 - (446 + 1434));
			local v85;
			local v86;
			while true do
				v85 = v73[v77];
				v86 = v85[291 - (60 + (526 - 296))];
				if (v86 <= (624 - (426 + 146))) then
					if ((v86 <= 25) or (3911 < 2578)) then
						if ((v86 <= (2 + 0 + 10)) or (1382 > 2216)) then
							if (v86 <= (1461 - (282 + 1174))) then
								if (v86 <= (813 - (569 + 242))) then
									if (v86 <= ((0 - 0) - 0)) then
										if (v83[v85[1 + 1]] ~= v83[v85[1028 - (706 + 318)]]) then
											v77 = v77 + (1252 - (721 + 530));
										else
											v77 = v85[1274 - (945 + 326)];
										end
									elseif (v86 > (2 - 1)) then
										do
											return;
										end
									else
										local v183 = v85[2 + 0];
										v83[v183] = v83[v183](v83[v183 + (701 - (271 + 429))]);
									end
								elseif (v86 <= (3 + (0 - 0))) then
									v83[v85[1502 - (1408 + 92)]] = v63[v85[1 + 2]];
								elseif (v86 > (14 - 10)) then
									v83[v85[1088 - (461 + 625)]] = v83[v85[(1724 - (279 + 154)) - ((1771 - (454 + 324)) + 295)]] % v83[v85[1 + 3]];
								else
									local v186 = 1171 - (418 + 753);
									local v187;
									while true do
										if (((0 + 0 + 0) == v186) or (4238 < 87)) then
											v187 = v85[2];
											do
												return v13(v83, v187, v78);
											end
											break;
										end
									end
								end
							elseif (v86 <= (1 + 7)) then
								if ((2538 == 2538) and (v86 <= (4 + 2))) then
									v83[v85[2 + 0]] = #v83[v85[3]];
								elseif (v86 == (3 + 4)) then
									v83[v85[2]] = v83[v85[1 + 2]][v85[533 - (406 + 123)]];
								else
									v83[v85[(1788 - (12 + 5)) - (943 + 806 + 20)]] = v83[v85[1 + 2]] % v85[(27 - 16) - 7];
								end
							elseif (v86 <= ((493 + 839) - (1249 + 73))) then
								if (v86 == (4 + 5)) then
									v83[v85[1147 - ((1559 - (277 + 816)) + 679)]] = v83[v85[3 + 0]] - v83[v85[3 + 1]];
								else
									local v192 = 0 - 0;
									local v193;
									local v194;
									local v195;
									local v196;
									while true do
										if ((4122 == 4122) and (v192 == ((21 - 16) - 3))) then
											for v427 = v193, v78 do
												v196 = v196 + (668 - (89 + 578));
												v83[v427] = v194[v196];
											end
											break;
										end
										if (v192 == (1901 - ((1289 - (1058 + 125)) + 1794))) then
											v78 = (v195 + v193) - (1 + 0);
											v196 = 0 + 0;
											v192 = 3 - (1 + 0);
										end
										if (v192 == (1049 - (572 + 477))) then
											v193 = v85[(980 - (815 + 160)) - 3];
											v194, v195 = v76(v83[v193](v13(v83, v193 + (2 - 1), v85[117 - (4 + 110)])));
											v192 = 585 - (57 + 527);
										end
									end
								end
							elseif ((v86 > (1438 - (41 + 1386))) or (2861 == 2459)) then
								local v197 = v85[105 - (17 + (368 - 282))];
								v83[v197](v13(v83, v197 + 1 + 0, v85[(7 - 4) + 0]));
							elseif ((v83[v85[3 - 1]] == v83[v85[11 - 7]]) or (2371 > 2654)) then
								v77 = v77 + ((40 + 127) - ((356 - 234) + 44));
							else
								v77 = v85[5 - 2];
							end
						elseif (v86 <= (59 - 41)) then
							if (((1903 < 4021) and (v86 <= (13 + 2))) or (3466 > 4520)) then
								if (v86 <= (1 + 12)) then
									if (v83[v85[1 + 1]] == v85[7 - 3]) then
										v77 = v77 + (66 - (30 + 35));
									else
										v77 = v85[3 + 0];
									end
								elseif (v86 == (10 + 4)) then
									v83[v85[1259 - (1043 + 214)]][v83[v85[(1909 - (41 + 1857)) - 8]]] = v85[4];
								else
									v83[v85[2]][v83[v85[1215 - ((2216 - (1222 + 671)) + 889)]]] = v83[v85[10 - (15 - 9)]];
								end
							elseif ((v86 <= (596 - (361 + 219))) or (951 >= 1027)) then
								if (v83[v85[322 - (53 + (383 - 116))]] == v85[1 + 3]) then
									v77 = v77 + (414 - (15 + 398));
								else
									v77 = v85[3];
								end
							elseif (v86 == ((2181 - (229 + 953)) - (18 + 964))) then
								local v204 = v85[7 - 5];
								v83[v204] = v83[v204](v13(v83, v204 + 1 + 0, v78));
							else
								v77 = v85[8 - 5];
							end
						elseif (v86 <= (14 + 7)) then
							if (v86 <= (869 - (20 + 830))) then
								local v139 = v85[(1776 - (1111 + 663)) + 0];
								do
									return v83[v139](v13(v83, v139 + ((1706 - (874 + 705)) - (116 + 2 + 8)), v85[1 + 2]));
								end
							elseif (v86 == (758 - (542 + 196))) then
								local v207 = v74[v85[6 - 3]];
								local v208;
								local v209 = {};
								v208 = v10({}, {__index=function(v340, v341)
									local v342 = v209[v341];
									return v342[1 + 0][v342[2 + 0]];
								end,__newindex=function(v343, v344, v345)
									local v346 = 0 + 0;
									local v347;
									while true do
										if (v346 == (0 - 0)) then
											v347 = v209[v344];
											v347[2 - 1][v347[1553 - (1126 + 425)]] = v345;
											break;
										end
									end
								end});
								for v348 = 1454 - (666 + 787), v85[(12 + 397) - (118 + 287)] do
									v77 = v77 + 1 + 0;
									local v349 = v73[v77];
									if (v349[3 - 2] == (1161 - (118 + 1003))) then
										v209[v348 - (2 - 1)] = {v83,v349[8 - 5]};
									else
										v209[v348 - (1 + 0)] = {v63,v349[3 + 0]};
									end
									v82[#v82 + 1 + 0] = v209;
								end
								v83[v85[2 + 0]] = v29(v207, v208, v64);
							elseif ((v83[v85[2 + 0]] == v83[v85[3 + 1]]) or (2270 >= 4130)) then
								v77 = v77 + 1 + 0 + 0;
							else
								v77 = v85[1 + 2];
							end
						elseif ((2593 <= 3958) and (v86 <= (52 - 29))) then
							if ((v86 > (13 + 9)) or (1369 > 2250)) then
								v83[v85[4 - 2]]();
							elseif (v83[v85[5 - 3]] ~= v83[v85[8 - 4]]) then
								v77 = v77 + (1 - 0);
							else
								v77 = v85[1 + 1 + 1];
							end
						elseif ((1176 == 1176) and (v86 == (115 - 91))) then
							v83[v85[(2990 - 1799) - (442 + 747)]] = v64[v85[756 - (239 + 514)]];
						elseif not v83[v85[1 + 1]] then
							v77 = v77 + (1330 - (797 + 532));
						else
							v77 = v85[3 + 0];
						end
					elseif (v86 <= (13 + 25)) then
						if ((v86 <= ((526 - (233 + 221)) - 41)) or (3062 == 1818)) then
							if ((v86 <= (1230 - (373 + 829))) or (3717 < 3149)) then
								if (v86 <= (815 - (766 + (53 - 30)))) then
									local v140 = 0 - 0;
									local v141;
									local v142;
									local v143;
									while true do
										if ((v140 == (732 - (476 + 255))) or (937 > 3786)) then
											v143 = 1130 - (369 + 761);
											for v385 = v141, v85[3 + 1] do
												v143 = v143 + 1;
												v83[v385] = v142[v143];
											end
											break;
										end
										if ((v140 == ((945 + 128) - (1036 + 37))) or (901 > 4218)) then
											v141 = v85[(1543 - (718 + 823)) - 0];
											v142 = {v83[v141](v13(v83, v141 + (239 - (64 + 174)), v78))};
											v140 = 1;
										end
									end
								elseif ((4779 > 4047) and (3195 < 3730) and (v86 == (4 + 23))) then
									local v213 = (805 - (266 + 539)) - 0;
									local v214;
									local v215;
									while true do
										if (v213 == (336 - ((407 - 263) + (1417 - (636 + 589))))) then
											v214 = v85[218 - (42 + 174)];
											v215 = {};
											v213 = 1 + 0;
										end
										if (v213 == (1 + 0)) then
											for v432 = (2 - 1) + 0, #v82 do
												local v433 = 1148 - (556 + 592);
												local v434;
												while true do
													if (v433 == (1504 - (363 + 1141))) then
														v434 = v82[v432];
														for v469 = 808 - (329 + 479), #v434 do
															local v470 = 1580 - (1183 + (818 - 421));
															local v471;
															local v472;
															local v473;
															while true do
																if ((2797 <= 3980) and (v470 == (0 - (0 + 0)))) then
																	v471 = v434[v469];
																	v472 = v471[1 + 0];
																	v470 = 1 + 0;
																end
																if ((1944 <= 2368) and ((1 + 0) == v470)) then
																	v473 = v471[1977 - (1913 + 62)];
																	if ((1709 < 4248) and (v472 == v83) and (v473 >= v214)) then
																		v215[v473] = v472[v473];
																		v471[1 + 0] = v215;
																	end
																	break;
																end
															end
														end
														break;
													end
												end
											end
											break;
										end
									end
								else
									local v216 = v85[5 - 3];
									v83[v216](v13(v83, v216 + (1934 - (565 + 1368)), v78));
								end
							elseif ((v86 <= ((40 + 68) - 79)) or (3970 == 3202)) then
								v64[v85[1664 - (1477 + 184)]] = v83[v85[1391 - (135 + 1254)]];
							elseif ((v86 > (40 - 10)) or (3918 >= 4397)) then
								local v217 = 0 + 0;
								local v218;
								local v219;
								local v220;
								while true do
									if ((4050 > 1373) and (v217 == (857 - (564 + 292)))) then
										v220 = v83[v218] + v219;
										v83[v218] = v220;
										v217 = 1529 - ((1404 - (657 + 358)) + 1138);
									end
									if ((v217 == (576 - (102 + 472))) or (1037 > 4390)) then
										if (v219 > (0 - 0)) then
											if ((1407 <= 1919) and (v220 <= v83[v218 + 1 + 0])) then
												v77 = v85[8 - 5];
												v83[v218 + (307 - ((645 - 401) + 60))] = v220;
											end
										elseif ((v220 >= v83[v218 + 1 + 0]) or (780 == 3185)) then
											local v457 = 476 - (41 + 435);
											while true do
												if ((2526 >= 1717) and ((1001 - (938 + 63)) == v457)) then
													v77 = v85[3 + (0 - 0)];
													v83[v218 + 3] = v220;
													break;
												end
											end
										end
										break;
									end
									if ((v217 == (1125 - (936 + 189))) or (3202 >= 4075)) then
										v218 = v85[1 + 1];
										v219 = v83[v218 + (1615 - ((2752 - (1151 + 36)) + 48))];
										v217 = 1 + 0;
									end
								end
							elseif ((64 == 64) and (v83[v85[(1101 + 39) - (782 + 356)]] ~= v85[(72 + 199) - (176 + (271 - 180))])) then
								v77 = v77 + 1 + 0;
							else
								v77 = v85[7 - 4];
							end
						elseif (v86 <= (88 - (1886 - (1552 + 280)))) then
							if (v86 <= (1058 - (834 + 192))) then
								v83[v85[2 - (834 - (64 + 770))]] = v83[v85[1095 - (975 + 117)]] / v85[1879 - (157 + 1718)];
							elseif ((2202 >= 694) and (v86 == (27 + 6))) then
								v83[v85[6 - 4]] = #v83[v85[10 - 7]];
							else
								local v222 = v85[1020 - (474 + 223 + 321)];
								v83[v222](v13(v83, v222 + 1 + 0, v78));
							end
						elseif ((3706 <= 3900) and (v86 <= ((219 - 122) - 61))) then
							if ((v86 > (73 - 38)) or (3620 <= 2094)) then
								v83[v85[4 - (1 + 1)]] = v83[v85[2 + 1]] - v83[v85[6 - (1245 - (157 + 1086))]];
							else
								local v224 = 0 - 0;
								local v225;
								local v226;
								while true do
									if (v224 == (1228 - (322 + 905))) then
										v83[v225 + (612 - (602 + 9))] = v226;
										v83[v225] = v226[v83[v85[4]]];
										break;
									end
									if (v224 == (1189 - (449 + 740))) then
										v225 = v85[1416 - (1001 + (826 - 413))];
										v226 = v83[v85[(3832 - 2957) - (826 + 46)]];
										v224 = 948 - (245 + 702);
									end
								end
							end
						elseif (v86 > (116 - 79)) then
							v83[v85[(1 - 0) + 1]] = v29(v74[v85[1901 - (260 + 1638)]], nil, v64);
						else
							local v228 = 602 - (512 + (122 - 32));
							local v229;
							while true do
								if (((440 - (382 + 58)) == v228) or (1723 >= 2447)) then
									v229 = v85[6 - 4];
									v83[v229] = v83[v229](v13(v83, v229 + 1, v85[3 + 0]));
									break;
								end
							end
						end
					elseif ((v86 <= (92 - 47)) or (1199 > 3543)) then
						if (v86 <= (121 - 80)) then
							if ((1617 < 3271) and (2890 > 2617) and (v86 <= (1244 - (902 + 303)))) then
								for v167 = v85[3 - 1], v85[3] do
									v83[v167] = nil;
								end
							elseif ((v86 > (67 - 27)) or (3355 > 4385)) then
								v83[v85[1101 - (35 + 1064)]][v85[(822 - (599 + 220)) + 0]] = v83[v85[9 - 5]];
							else
								v83[v85[1 + 1]] = v83[v85[1693 - (1121 + 569)]];
							end
						elseif (v86 <= (257 - (22 + 192))) then
							if (v86 == (83 - 41)) then
								v64[v85[686 - ((2414 - (1813 + 118)) + 200)]] = v83[v85[1465 - (1404 + 59)]];
							else
								v83[v85[2]] = v83[v85[3 + 0]] % v83[v85[10 - 6]];
							end
						elseif ((3085 > 1166) and (v86 == (58 - 14))) then
							v83[v85[767 - (468 + 297)]] = v83[v85[565 - (334 + 228)]][v85[1 + 0 + (1220 - (841 + 376))]];
						elseif ((v83[v85[6 - 4]] <= v83[v85[15 - (15 - 4)]]) or (3067 <= 2195)) then
							v77 = v77 + (2 - 1);
						else
							v77 = v85[3];
						end
					elseif (v86 <= 48) then
						if (v86 <= (83 - (9 + 28))) then
							local v147 = v85[1 + 1];
							do
								return v83[v147](v13(v83, v147 + (237 - (141 + (259 - 164))), v85[3 + 0]));
							end
						elseif ((4493 >= 3603) and (3025 >= 2813) and (v86 > (120 - 73))) then
							v83[v85[4 - 2]] = v85[1 + (861 - (464 + 395))];
						else
							local v241 = v85[23 - (20 + 1)];
							local v242, v243 = v76(v83[v241](v13(v83, v241 + (2 - 1), v78)));
							v78 = (v243 + v241) - (1 + 0);
							local v244 = 0 + 0;
							for v352 = v241, v78 do
								local v353 = 685 - (314 + 371);
								while true do
									if ((2843 <= 2975) and (v353 == (0 - 0))) then
										v244 = v244 + (1 - 0);
										v83[v352] = v242[v244];
										break;
									end
								end
							end
						end
					elseif (v86 <= ((69 - 42) + 23)) then
						if (((2412 >= 356) and (v86 == (29 + 20))) or (1989 <= 174)) then
							if (v83[v85[165 - (92 + 71)]] ~= v85[1383 - (1055 + 324)]) then
								v77 = v77 + (1341 - (1093 + 247));
							else
								v77 = v85[2 + 1];
							end
						else
							v83[v85[2 - 0]][v85[1 + 2]] = v85[769 - (574 + 191)];
						end
					elseif (((2070 > 1171) and (v86 > (43 + 8))) or (209 > 2153)) then
						v83[v85[4 - 2]][v85[2 + 1]] = v83[v85[853 - (254 + 595)]];
					else
						local v249 = 126 - (55 + 71);
						local v250;
						local v251;
						local v252;
						local v253;
						while true do
							if ((v249 == (1 - 0)) or (2020 == 1974)) then
								v78 = (v252 + v250) - (1791 - (573 + 1217));
								v253 = 0;
								v249 = 5 - 3;
							end
							if (v249 == ((4 + 3) - 5)) then
								for v437 = v250, v78 do
									v253 = v253 + (838 - (467 + 370)) + 0;
									v83[v437] = v251[v253];
								end
								break;
							end
							if (v249 == (0 - 0)) then
								v250 = v85[(1944 - 1003) - (714 + 225)];
								v251, v252 = v76(v83[v250](v83[v250 + (2 - 1)]));
								v249 = (1 + 0) - 0;
							end
						end
					end
				elseif (v86 <= ((30 - 21) + 69)) then
					if ((v86 <= (93 - 28)) or (1347 == 1360)) then
						if ((v86 <= (864 - (118 + 688))) or (4461 == 3572)) then
							if (v86 <= ((17 + 86) - (25 + 23))) then
								if ((v86 <= (11 + 42)) or (4108 < 3934)) then
									if v83[v85[2 - 0]] then
										v77 = v77 + (1887 - (927 + 959));
									else
										v77 = v85[10 - (16 - 9)];
									end
								elseif (v86 > (786 - (16 + 716))) then
									local v255 = v74[v85[5 - 2]];
									local v256;
									local v257 = {};
									v256 = v10({}, {__index=function(v354, v355)
										local v356 = v257[v355];
										return v356[1269 - (1249 + 19)][v356[99 - (11 + 86)]];
									end,__newindex=function(v357, v358, v359)
										local v360 = v257[v358];
										v360[2 - 1][v360[287 - (175 + 110)]] = v359;
									end});
									for v362 = (4 - 2) - 1, v85[1090 - ((3253 - 2567) + 400)] do
										local v363 = 0 - (0 + 0);
										local v364;
										while true do
											if ((((2187 - (14 + 376)) - ((871 - 368) + 837 + 456)) == v363) or (2872 == 318)) then
												if (v364[2 - (1 + 0)] == (29 + 11)) then
													v257[v362 - (1062 - (810 + 251))] = {v83,v364[814 - (721 + 90)]};
												else
													v257[v362 - (1 + 0 + 0)] = {v63,v364[4 - 1]};
												end
												v82[#v82 + 1] = v257;
												break;
											end
											if ((568 == 568) and (v363 == ((552 + 181) - (711 + 22)))) then
												v77 = v77 + (3 - 2);
												v364 = v73[v77];
												v363 = 860 - (240 + (697 - (23 + 55)));
											end
										end
									end
									v83[v85[1 + 1]] = v29(v255, v256, v64);
								else
									local v259 = v85[1 + 1];
									v83[v259](v83[v259 + (1 - 0)]);
								end
							elseif ((4200 == 4200) and (v86 <= (4 + 52))) then
								local v148 = v85[515 - (203 + 310)];
								local v149 = {v83[v148](v13(v83, v148 + (406 - (255 + 150)), v78))};
								local v150 = 0 + 0;
								for v169 = v148, v85[7 - 3] do
									v150 = v150 + 1 + (0 - 0);
									v83[v169] = v149[v150];
								end
							elseif (v86 == (243 - 186)) then
								local v260 = v85[6 - 4];
								local v261 = v83[v85[11 - 8]];
								v83[v260 + (1 - 0)] = v261;
								v83[v260] = v261[v83[v85[837 - (171 + 662)]]];
							else
								local v265 = v85[1741 - (404 + 1335)];
								local v266, v267 = v76(v83[v265](v13(v83, v265 + ((3 + 0) - 2), v78)));
								v78 = (v267 + v265) - (407 - (183 + 223));
								local v268 = 0 - 0;
								for v365 = v265, v78 do
									v268 = v268 + 1;
									v83[v365] = v266[v268];
								end
							end
						elseif (v86 <= (41 + 20)) then
							if ((v86 <= (22 + 37)) or (4285 < 1369)) then
								local v151 = v85[339 - (9 + 1 + (506 - 179))];
								local v152 = v85[3 + 1];
								local v153 = v151 + (340 - (118 + 70 + 150));
								local v154 = {v83[v151](v83[v151 + (450 - (108 + 341))], v83[v153])};
								for v172 = 1 + 0, v152 do
									v83[v153 + v172] = v154[v172];
								end
								local v155 = v154[4 - (7 - 4)];
								if v155 then
									v83[v153] = v155;
									v77 = v85[1496 - (711 + 782)];
								else
									v77 = v77 + 1;
								end
							elseif ((3499 >= 3439) and (v86 == (115 - 55))) then
								v83[v85[(2339 - (708 + 1160)) - (270 + 199)]] = v83[v85[1 + 2]] % v85[4];
							else
								v83[v85[2 + 0]] = v85[2 + 1] ~= (1819 - ((1574 - 994) + (2258 - 1019)));
							end
						elseif ((v86 <= (153 - 90)) or (3520 > 4910)) then
							if (v86 > (495 - (114 + (346 - (10 + 17))))) then
								for v368 = v85[5 - (1 + 2)], v85[3 + 0] do
									v83[v368] = nil;
								end
							else
								local v273 = v85[1 + (1733 - (1400 + 332))];
								v83[v273] = v83[v273](v13(v83, v273 + 1 + 0, v85[7 - 4]));
							end
						elseif ((876 < 3303) and (v86 > (40 + 24))) then
							v83[v85[1169 - ((1237 - 592) + (2430 - (242 + 1666)))]] = {};
						elseif (v85[1792 - (433 + 577 + 780)] == v83[v85[4 + 0]]) then
							v77 = v77 + (4 - 3);
						else
							v77 = v85[8 - (2 + 3)];
						end
					elseif ((2842 <= 4353) and (2922 <= 3562) and (v86 <= (1907 - (891 + 154 + 791)))) then
						if ((2619 >= 1322) and (v86 <= (171 - 103))) then
							if (((4133 >= 2404) and (v86 <= ((1040 - (850 + 90)) - (59 - 25)))) or (3751 < 1643)) then
								v83[v85[507 - (351 + 154)]][v83[v85[1577 - (1281 + 293)]]] = v85[270 - (28 + 238)];
							elseif (v86 > (149 - 82)) then
								local v276 = v85[1561 - (1381 + 178)];
								local v277 = {};
								for v370 = 1231 - (957 + (1663 - (360 + 1030))), #v82 do
									local v371 = v82[v370];
									for v392 = 0 + 0, #v371 do
										local v393 = v371[v392];
										local v394 = v393[1 + 0];
										local v395 = v393[1 + 1];
										if (((v394 == v83) and (v395 >= v276)) or (1433 == 2686)) then
											v277[v395] = v394[v395];
											v393[3 - 2] = v277;
										end
									end
								end
							elseif (not v83[v85[2 + 0]] or (4123 == 4457)) then
								v77 = v77 + 1 + 0;
							else
								v77 = v85[3];
							end
						elseif (v86 <= (539 - (381 + 89))) then
							v83[v85[9 - 7]] = v63[v85[3]];
						elseif (v86 == (63 + 7)) then
							local v278 = 0 + (0 - 0);
							local v279;
							local v280;
							local v281;
							while true do
								if ((1 - 0) == v278) then
									v281 = v83[v279 + 1 + 1];
									if ((v281 > ((1589 - 433) - (1074 + 82))) or (4911 == 3534)) then
										if ((v280 > v83[v279 + ((1662 - (909 + 752)) - 0)]) or (3972 <= 205)) then
											v77 = v85[1787 - (214 + 1570)];
										else
											v83[v279 + (1458 - (990 + 465))] = v280;
										end
									elseif (v280 < v83[v279 + 1 + (1223 - (109 + 1114))]) then
										v77 = v85[2 + 1];
									else
										v83[v279 + 3 + 0] = v280;
									end
									break;
								end
								if (v278 == (0 - 0)) then
									v279 = v85[1728 - (1668 + 58)];
									v280 = v83[v279];
									v278 = 627 - (512 + 114);
								end
							end
						else
							local v282 = v85[5 - (5 - 2)];
							v83[v282] = v83[v282]();
						end
					elseif (v86 <= (152 - 78)) then
						if ((v86 <= (250 - 178)) or (3766 < 1004)) then
							v83[v85[2]] = v85[2 + 1];
						elseif (v86 == (14 + 59)) then
							local v284 = 0;
							local v285;
							while true do
								if (v284 == (0 + 0)) then
									v285 = v85[1120 - (628 + 490)];
									v83[v285] = v83[v285]();
									break;
								end
							end
						else
							local v286 = v85[1 + 1];
							local v287 = v83[v85[10 - 7]];
							v83[v286 + ((2 + 2) - 3)] = v287;
							v83[v286] = v287[v85[(2240 - (6 + 236)) - (109 + 1885)]];
						end
					elseif ((3001 > 16) and (v86 <= (1545 - (1269 + 200)))) then
						if ((2875 <= 3255) and (v86 > (143 - 68))) then
							if ((368 < 4254) and (v85[(515 + 302) - (98 + 717)] == v83[v85[830 - (802 + 24)]])) then
								v77 = v77 + 1 + 0;
							else
								v77 = v85[3];
							end
						else
							v83[v85[2 - 0]] = v85[3 - (0 + 0)] + v83[v85[4]];
						end
					elseif ((1784 < 2184) and (v86 == (15 + 62))) then
						v83[v85[1 + 1]] = v83[v85[3 + 0]] + v85[1 + 3];
					elseif v83[v85[4 - 2]] then
						v77 = v77 + 1 + 0;
					else
						v77 = v85[(4 - 1) + 0];
					end
				elseif (v86 <= ((1386 - (1076 + 57)) - (27 + 135))) then
					if ((v86 <= (1401 - (486 + 831))) or (4841 <= 2203)) then
						if (v86 <= (270 - (878 - (579 + 110)))) then
							if (v86 <= (3 + 26 + 50)) then
								v83[v85[1 + 0 + 1]] = v85[3 + 0] ~= (0 + 0);
							elseif (v86 == (38 + 42)) then
								local v293 = v85[1435 - (797 + 636)];
								local v294 = v83[v293];
								local v295 = v83[v293 + (9 - 7)];
								if (v295 > (1619 - (1427 + 192))) then
									if ((v294 > v83[v293 + 1 + 0 + 0]) or (1649 > 4231)) then
										v77 = v85[6 - 3];
									else
										v83[v293 + (1947 - (1129 + 815))] = v294;
									end
								elseif (v294 < v83[v293 + 1 + 0]) then
									v77 = v85[2 + 1];
								else
									v83[v293 + (329 - (192 + 134))] = v294;
								end
							else
								do
									return;
								end
							end
						elseif (v86 <= (1358 - (316 + 960))) then
							v83[v85[2 + 0]] = v85[10 - 7] + v83[v85[4 + 0]];
						elseif (v86 > (77 + 6)) then
							v83[v85[773 - (720 + 51)]] = v64[v85[11 - 8]];
						else
							v83[v85[4 - 2]] = v83[v85[554 - (83 + 468)]] / v85[1810 - ((1609 - (174 + 233)) + (1687 - 1083))];
						end
					elseif ((3193 == 3193) and (v86 <= ((712 - 306) - 319))) then
						if (v86 <= (141 - 56)) then
							local v164 = 0 - 0;
							local v165;
							while true do
								if (v164 == (325 - (45 + 280))) then
									v165 = v85[2 + 0];
									v83[v165] = v83[v165](v83[v165 + 1 + 0]);
									break;
								end
							end
						elseif ((4661 > 616) and (v86 > 86)) then
							v83[v85[1 + 1]][v83[v85[4 - 1]]] = v83[v85[2 + 1 + 1]];
						else
							local v301 = v85[(1175 - (663 + 511)) + 1];
							local v302 = v83[v85[5 - 2]];
							v83[v301 + (1912 - (340 + 1571))] = v302;
							v83[v301] = v302[v85[4]];
						end
					elseif ((v86 <= (33 + 3 + 53)) or (3495 > 4306)) then
						if ((4001 > 3798) and (v86 > (1860 - (1733 + 39)))) then
							if ((v83[v85[1 + 1]] <= v83[v85[4 + 0]]) or (4688 <= 4499)) then
								v77 = v77 + (849 - (40 + 176 + 632));
							else
								v77 = v85[3];
							end
						else
							v83[v85[5 - 3]][v85[1037 - (125 + (2802 - 1893))]] = v85[1952 - (1096 + 516 + 336)];
						end
					elseif ((v86 > (41 + 49)) or (1567 <= 319)) then
						v77 = v85[2 + (2 - 1)];
					else
						v83[v85[2 - 0]] = v83[v85[3 + (0 - 0)]][v83[v85[516 - (409 + 103)]]];
					end
				elseif (v86 <= (334 - (46 + 190))) then
					if ((v86 <= ((123 + 133) - 162)) or (4583 == 3761)) then
						if ((3454 > 1580) and (v86 <= (187 - (51 + 44)))) then
							v83[v85[1 + (1 - 0)]]();
						elseif (v86 == (1410 - (1114 + 203))) then
							local v311 = 0 + 0;
							local v312;
							local v313;
							local v314;
							local v315;
							while true do
								if (v311 == (726 - (228 + 498))) then
									v312 = v85[1 + 1];
									v313, v314 = v76(v83[v312](v13(v83, v312 + 1 + 0, v85[(475 + 191) - (174 + 489)])));
									v311 = 2 - (1 + 0);
								end
								if ((v311 == (1906 - (830 + 1075))) or (1607 == 20)) then
									v78 = (v314 + v312) - (525 - (303 + 221));
									v315 = 1269 - (231 + 1038);
									v311 = 2 + 0;
								end
								if ((v311 == (1164 - (171 + 991))) or (962 >= 4666) or (1943 == 2712)) then
									for v449 = v312, v78 do
										v315 = v315 + ((724 - (478 + 244)) - 1);
										v83[v449] = v313[v315];
									end
									break;
								end
							end
						else
							local v316 = 0 - 0;
							local v317;
							local v318;
							local v319;
							while true do
								if (v316 == (1237 - (1030 + 205))) then
									if ((4219 >= 39) and (v318 > (0 + 0))) then
										if (v319 <= v83[v317 + 1 + 0]) then
											local v462 = 0;
											while true do
												if ((3967 > 2289) and (v462 == (0 - 0))) then
													v77 = v85[7 - 4];
													v83[v317 + (6 - 3)] = v319;
													break;
												end
											end
										end
									elseif (v319 >= v83[v317 + 1 + 0]) then
										v77 = v85[10 - (524 - (440 + 77))];
										v83[v317 + (8 - 5)] = v319;
									end
									break;
								end
								if ((v316 == (1 - 0)) or (1896 == 1708)) then
									v319 = v83[v317] + v318;
									v83[v317] = v319;
									v316 = 6 - 4;
								end
								if (v316 == ((568 + 680) - (111 + 1137))) then
									v317 = v85[160 - (91 + 67)];
									v318 = v83[v317 + (5 - 3)];
									v316 = 1 + 0;
								end
							end
						end
					elseif (v86 <= ((2265 - 1646) - (423 + 100))) then
						if (v86 > (1310 - (369 + 846))) then
							local v320 = v85[1 + 1];
							v83[v320](v13(v83, v320 + ((1558 - (655 + 901)) - 1), v85[1 + 2]));
						else
							local v321 = v85[2 + 0];
							local v322, v323 = v76(v83[v321](v83[v321 + 1]));
							v78 = (v323 + v321) - (772 - (326 + 445));
							local v324 = 0;
							for v374 = v321, v78 do
								v324 = v324 + 1 + 0;
								v83[v374] = v322[v324];
							end
						end
					elseif (v86 > (423 - 326)) then
						v83[v85[4 - 2]] = v83[v85[4 - 1]];
					else
						local v327 = v85[205 - (11 + 192)];
						local v328 = v85[9 - 5];
						local v329 = v327 + ((133 + 580) - (406 + 124 + 181));
						local v330 = {v83[v327](v83[v327 + (33 - (19 + 13))], v83[v329])};
						for v377 = 1 - 0, v328 do
							v83[v329 + v377] = v330[v377];
						end
						local v331 = v330[(7 - 5) - 1];
						if ((3985 >= 1284) and v331) then
							v83[v329] = v331;
							v77 = v85[8 - 5];
						else
							v77 = v77 + ((1622 - (695 + 750)) - (50 + 126));
						end
					end
				elseif (v86 <= (27 + 74)) then
					if ((v86 <= (173 - (252 - 178))) or (851 > 2987)) then
						v83[v85[3 - 1]] = {};
					elseif ((v86 == (1912 - (1293 + (800 - 281)))) or (1987 == 545)) then
						v83[v85[3 - 1]] = v83[v85[7 - (15 - 11)]][v83[v85[1425 - (107 + 1314)]]];
					else
						local v334 = v85[3 - 1];
						do
							return v13(v83, v334, v78);
						end
					end
				elseif ((v86 <= ((795 - (285 + 66)) - 341)) or (4896 < 1261)) then
					if (v86 == ((102 - 58) + (1368 - (682 + 628)))) then
						v83[v85[4 - (1 + 1)]] = v83[v85[(301 - (176 + 123)) + 1]] + v85[1 + 0 + 3];
					else
						v83[v85[(3 + 1) - 2]] = v29(v74[v85[1 + 2]], nil, v64);
					end
				elseif (v86 > ((304 - (239 + 30)) + 69)) then
					local v337 = v85[1912 - (716 + 1194)];
					v83[v337](v83[v337 + 1 + 0]);
				else
					local v338 = v85[1098 - (709 + 387)];
					v83[v338] = v83[v338](v13(v83, v338 + (1859 - (673 + 1185)), v78));
				end
				v77 = v77 + ((1 + 0) - (0 + 0));
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);
